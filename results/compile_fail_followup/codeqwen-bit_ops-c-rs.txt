warning: variable `A` should have a snake case name
 --> /tmp/codeqwen-bit_ops-c-rs.rs:2:9
  |
2 |     let A = 42; // Replace with your desired value for A
  |         ^ help: convert the identifier to snake case: `a`
  |
  = note: `#[warn(non_snake_case)]` on by default

error: literal out of range for `i32`
 --> /tmp/codeqwen-bit_ops-c-rs.rs:7:34
  |
7 |     println!("C >> b: {}", ((A & 0xFFFF_FFFF) as u32) >> n); // Logical right shift
  |                                  ^^^^^^^^^^^
  |
  = note: the literal `0xFFFF_FFFF` (decimal `4294967295`) does not fit into the type `i32` and will become `-1i32`
  = help: consider using the type `u32` instead
  = note: `#[deny(overflowing_literals)]` on by default
help: to use as a negative number (decimal `-1`), consider using the type `u32` for the literal and cast it to `i32`
  |
7 |     println!("C >> b: {}", ((A & 0xFFFF_FFFFu32 as i32) as u32) >> n); // Logical right shift
  |                                  ~~~~~~~~~~~~~~~~~~~~~

error: aborting due to 1 previous error; 1 warning emitted

