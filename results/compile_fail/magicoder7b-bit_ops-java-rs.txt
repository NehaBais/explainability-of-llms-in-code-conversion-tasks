error: `~` cannot be used as a unary operator
 --> /tmp/magicoder7b-bit_ops-java-rs.rs:5:27
  |
5 |     println!("NOT a: {}", ~a);
  |                           ^
  |
help: use `!` to perform bitwise not
  |
5 |     println!("NOT a: {}", !a);
  |                           ~

error[E0601]: `main` function not found in crate `magicoder7b_bit_ops_java_rs`
  --> /tmp/magicoder7b-bit_ops-java-rs.rs:16:2
   |
16 | }
   |  ^ consider adding a `main` function to `/tmp/magicoder7b-bit_ops-java-rs.rs`

error[E0308]: mismatched types
 --> /tmp/magicoder7b-bit_ops-java-rs.rs:7:53
  |
7 |     println!("a >> b: {}", ((a as u32).wrapping_shr(b)) as i32); // arithmetic right shift, Rust's `shr` doesn't support signed numbers
  |                                        ------------ ^ expected `u32`, found `u8`
  |                                        |
  |                                        arguments to this method are incorrect
  |
note: method defined here
 --> /private/tmp/rust-20241019-8391-fxpxmx/rustc-1.82.0-src/library/core/src/num/mod.rs:1136:5
  = note: this error originates in the macro `uint_impl` (in Nightly builds, run with -Z macro-backtrace for more info)
help: you can convert a `u8` to a `u32`
  |
7 |     println!("a >> b: {}", ((a as u32).wrapping_shr(b.into())) as i32); // arithmetic right shift, Rust's `shr` doesn't support signed numbers
  |                                                      +++++++

error[E0308]: mismatched types
 --> /tmp/magicoder7b-bit_ops-java-rs.rs:8:45
  |
8 |     println!("a >>> b: {}", (a.wrapping_shr(b) & 0xffff_ffff) as i32); // logical right shift with sign extension
  |                                ------------ ^ expected `u32`, found `u8`
  |                                |
  |                                arguments to this method are incorrect
  |
note: method defined here
 --> /private/tmp/rust-20241019-8391-fxpxmx/rustc-1.82.0-src/library/core/src/num/mod.rs:326:5
  = note: this error originates in the macro `int_impl` (in Nightly builds, run with -Z macro-backtrace for more info)
help: you can convert a `u8` to a `u32`
  |
8 |     println!("a >>> b: {}", (a.wrapping_shr(b.into()) & 0xffff_ffff) as i32); // logical right shift with sign extension
  |                                              +++++++

error: aborting due to 4 previous errors

Some errors have detailed explanations: E0308, E0601.
For more information about an error, try `rustc --explain E0308`.
