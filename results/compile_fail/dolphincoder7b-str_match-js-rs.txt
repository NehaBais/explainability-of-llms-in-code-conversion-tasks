error: `~` cannot be used as a unary operator
  --> /tmp/dolphincoder7b-str_match-js-rs.rs:17:8
   |
17 |     if ~q2 && !q2matches.is_empty() {
   |        ^
   |
help: use `!` to perform bitwise not
   |
17 |     if !q2 && !q2matches.is_empty() {
   |        ~

error: `~` cannot be used as a unary operator
  --> /tmp/dolphincoder7b-str_match-js-rs.rs:16:69
   |
16 |     println!("2: Is '{}' contained in {}? {}", stringB, stringA, if ~q2 { format!("Yes, at index {}.", q2) } else { "No.".to_string() });
   |                                                                     ^
   |
help: use `!` to perform bitwise not
   |
16 |     println!("2: Is '{}' contained in {}? {}", stringB, stringA, if !q2 { format!("Yes, at index {}.", q2) } else { "No.".to_string() });
   |                                                                     ~

error[E0432]: unresolved import `regex`
 --> /tmp/dolphincoder7b-str_match-js-rs.rs:1:5
  |
1 | use regex::Regex;
  |     ^^^^^ you might be missing crate `regex`
  |
help: consider importing the `regex` crate
  |
1 + extern crate regex;
  |

error[E0308]: mismatched types
  --> /tmp/dolphincoder7b-str_match-js-rs.rs:10:22
   |
10 |         .filter(|(_, &c)| c == stringB.chars().next())
   |                  ----^^-
   |                  |   |
   |                  |   expected `char`, found `&_`
   |                  expected due to this
   |
   = note:   expected type `char`
           found reference `&_`
help: consider removing `&` from the pattern
   |
10 -         .filter(|(_, &c)| c == stringB.chars().next())
10 +         .filter(|(_, c)| c == stringB.chars().next())
   |

error[E0308]: mismatched types
  --> /tmp/dolphincoder7b-str_match-js-rs.rs:16:69
   |
16 |     println!("2: Is '{}' contained in {}? {}", stringB, stringA, if ~q2 { format!("Yes, at index {}.", q2) } else { "No.".to_string() });
   |                                                                     ^^^ expected `bool`, found `usize`

error[E0308]: mismatched types
  --> /tmp/dolphincoder7b-str_match-js-rs.rs:17:8
   |
17 |     if ~q2 && !q2matches.is_empty() {
   |        ^^^ expected `bool`, found `usize`

error[E0599]: the method `join` exists for struct `Vec<usize>`, but its trait bounds were not satisfied
  --> /tmp/dolphincoder7b-str_match-js-rs.rs:20:49
   |
20 |             q2matches.len(), stringA, q2matches.join(", ")
   |                                                 ^^^^ method cannot be called on `Vec<usize>` due to unsatisfied trait bounds
   |
   = note: the following trait bounds were not satisfied:
           `[usize]: Join<_>`

error: aborting due to 7 previous errors

Some errors have detailed explanations: E0308, E0432, E0599.
For more information about an error, try `rustc --explain E0308`.
