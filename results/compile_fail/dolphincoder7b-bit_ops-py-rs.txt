error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:54:14
   |
54 |         "{:#0w}\tAND\t{:#0w}\n{:#0w}\tOR\t{:#0w}\n{:#0w}\tXOR\t{:#0w}",
   |              ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:54:27
   |
54 |         "{:#0w}\tAND\t{:#0w}\n{:#0w}\tOR\t{:#0w}\n{:#0w}\tXOR\t{:#0w}",
   |                           ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:54:35
   |
54 |         "{:#0w}\tAND\t{:#0w}\n{:#0w}\tOR\t{:#0w}\n{:#0w}\tXOR\t{:#0w}",
   |                                   ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:54:47
   |
54 |         "{:#0w}\tAND\t{:#0w}\n{:#0w}\tOR\t{:#0w}\n{:#0w}\tXOR\t{:#0w}",
   |                                               ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:54:55
   |
54 |         "{:#0w}\tAND\t{:#0w}\n{:#0w}\tOR\t{:#0w}\n{:#0w}\tXOR\t{:#0w}",
   |                                                       ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:54:68
   |
54 |         "{:#0w}\tAND\t{:#0w}\n{:#0w}\tOR\t{:#0w}\n{:#0w}\tXOR\t{:#0w}",
   |                                                                    ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: 6 positional arguments in format string, but there are 3 arguments
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:54:10
   |
54 |         "{:#0w}\tAND\t{:#0w}\n{:#0w}\tOR\t{:#0w}\n{:#0w}\tXOR\t{:#0w}",
   |          ^^^^^^       ^^^^^^  ^^^^^^      ^^^^^^  ^^^^^^       ^^^^^^
55 |         a & b,
   |         -----
56 |         a | b,
   |         -----
57 |         a ^ b
   |         -----
   |
   = note: for information about formatting flags, visit https://doc.rust-lang.org/std/fmt/index.html

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:65:19
   |
65 |     println!("{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}",
   |                   ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:65:33
   |
65 |     println!("{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}",
   |                                 ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:65:41
   |
65 |     println!("{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}",
   |                                         ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:65:55
   |
65 |     println!("{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}",
   |                                                       ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:65:63
   |
65 |     println!("{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}",
   |                                                               ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:65:77
   |
65 |     println!("{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}",
   |                                                                             ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:65:85
   |
65 |     println!("{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}",
   |                                                                                     ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:65:99
   |
65 |     println!("{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}",
   |                                                                                                   ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:65:107
   |
65 |     println!("{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}",
   |                                                                                                           ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:65:121
   |
65 |     println!("{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}",
   |                                                                                                                         ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:65:129
   |
65 |     println!("{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}",
   |                                                                                                                                 ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:65:143
   |
65 |     println!("{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}",
   |                                                                                                                                               ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: 12 positional arguments in format string, but there are 7 arguments
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:65:15
   |
65 |     println!("{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotR\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}\n{:#0w}\tRotL\t{:#0w}",
   |               ^^^^^^        ^^^^^^  ^^^^^^        ^^^^^^  ^^^^^^        ^^^^^^  ^^^^^^        ^^^^^^  ^^^^^^        ^^^^^^  ^^^^^^        ^^^^^^
66 |         a, rotr(8, a, 1), rotr(8, a, 2), rotr(8, a, 4),
   |         -  -------------  -------------  -------------
67 |         rotl(8, a, 1), rotl(8, a, 2), rotl(8, a, 4));
   |         -------------  -------------  -------------
   |
   = note: for information about formatting flags, visit https://doc.rust-lang.org/std/fmt/index.html

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:71:14
   |
71 |         "{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}",
   |              ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:71:27
   |
71 |         "{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}",
   |                           ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:71:35
   |
71 |         "{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}",
   |                                   ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:71:48
   |
71 |         "{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}",
   |                                                ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:71:56
   |
71 |         "{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}",
   |                                                        ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:71:69
   |
71 |         "{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}",
   |                                                                     ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:71:77
   |
71 |         "{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}",
   |                                                                             ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: unknown format trait `w`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:71:90
   |
71 |         "{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}",
   |                                                                                          ^
   |
   = note: the only appropriate formatting traits are:
           - ``, which uses the `Display` trait
           - `?`, which uses the `Debug` trait
           - `e`, which uses the `LowerExp` trait
           - `E`, which uses the `UpperExp` trait
           - `o`, which uses the `Octal` trait
           - `p`, which uses the `Pointer` trait
           - `b`, which uses the `Binary` trait
           - `x`, which uses the `LowerHex` trait
           - `X`, which uses the `UpperHex` trait

error: 8 positional arguments in format string, but there are 5 arguments
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:71:10
   |
71 |         "{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}\n{:#0w}\tASR\t{:#0w}",
   |          ^^^^^^       ^^^^^^  ^^^^^^       ^^^^^^  ^^^^^^       ^^^^^^  ^^^^^^       ^^^^^^
72 |         a,
   |         -
73 |         asr(8, a, 1),
   |         ------------
74 |         asr(8, aa, 1),
   |         -------------
75 |         asr(8, a, 2),
   |         ------------
76 |         asr(8, aa, 2)
   |         -------------
   |
   = note: for information about formatting flags, visit https://doc.rust-lang.org/std/fmt/index.html

error[E0573]: expected type, found const parameter `W`
 --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:1:32
  |
1 | fn rotr<const W: usize>(width: W, a: u64, n: i64) -> u64 {
  |                                ^ not a type

error[E0573]: expected type, found const parameter `W`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:22:32
   |
22 | fn rotl<const W: usize>(width: W, a: u64, n: u32) -> u64 {
   |                                ^ not a type

error[E0573]: expected type, found const parameter `W`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:41:31
   |
41 | fn asr<const W: usize>(width: W, a: u64, n: i32) -> i64 {
   |                               ^ not a type

error[E0573]: expected type, found const parameter `W`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:52:45
   |
52 | fn bitwise_built_ins<const W: usize>(width: W, a: u64, b: u64) {
   |                                             ^ not a type

error[E0308]: mismatched types
 --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:8:52
  |
8 |             | ((1 << (W - 1)) & a) << (width - n % W as u32)
  |                                                    ^^^^^^^^ expected `i64`, found `u32`

error[E0277]: cannot calculate the remainder of `i64` divided by `u32`
 --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:8:50
  |
8 |             | ((1 << (W - 1)) & a) << (width - n % W as u32)
  |                                                  ^ no implementation for `i64 % u32`
  |
  = help: the trait `Rem<u32>` is not implemented for `i64`
  = help: the following other types implement trait `Rem<Rhs>`:
            `&'a i64` implements `Rem<i64>`
            `&i64` implements `Rem<&i64>`
            `i64` implements `Rem<&i64>`
            `i64` implements `Rem`

error[E0308]: mismatched types
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:14:51
   |
14 |             let signs = ((1u64 << n) - 1) << (W - n);
   |                                                   ^ expected `usize`, found `i64`

error[E0277]: cannot subtract `i64` from `usize`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:14:49
   |
14 |             let signs = ((1u64 << n) - 1) << (W - n);
   |                                                 ^ no implementation for `usize - i64`
   |
   = help: the trait `Sub<i64>` is not implemented for `usize`
   = help: the following other types implement trait `Sub<Rhs>`:
             `&'a usize` implements `Sub<usize>`
             `&usize` implements `Sub<&usize>`
             `usize` implements `Sub<&usize>`
             `usize` implements `Sub`

error[E0308]: mismatched types
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:27:38
   |
27 |             | ((1u64 << (width - n % W)) - 1) & a >> (W - n % W)
   |                                      ^ expected `u32`, found `usize`

error[E0277]: cannot calculate the remainder of `u32` divided by `usize`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:27:36
   |
27 |             | ((1u64 << (width - n % W)) - 1) & a >> (W - n % W)
   |                                    ^ no implementation for `u32 % usize`
   |
   = help: the trait `Rem<usize>` is not implemented for `u32`
   = help: the following other types implement trait `Rem<Rhs>`:
             `&'a u32` implements `Rem<u32>`
             `&u32` implements `Rem<&u32>`
             `u32` implements `Rem<&u32>`
             `u32` implements `Rem<NonZero<u32>>`
             `u32` implements `Rem`

error[E0308]: mismatched types
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:27:63
   |
27 |             | ((1u64 << (width - n % W)) - 1) & a >> (W - n % W)
   |                                                               ^ expected `u32`, found `usize`

error[E0277]: cannot calculate the remainder of `u32` divided by `usize`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:27:61
   |
27 |             | ((1u64 << (width - n % W)) - 1) & a >> (W - n % W)
   |                                                             ^ no implementation for `u32 % usize`
   |
   = help: the trait `Rem<usize>` is not implemented for `u32`
   = help: the following other types implement trait `Rem<Rhs>`:
             `&'a u32` implements `Rem<u32>`
             `&u32` implements `Rem<&u32>`
             `u32` implements `Rem<&u32>`
             `u32` implements `Rem<NonZero<u32>>`
             `u32` implements `Rem`

error[E0308]: mismatched types
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:27:59
   |
27 |             | ((1u64 << (width - n % W)) - 1) & a >> (W - n % W)
   |                                                           ^^^^^ expected `usize`, found `u32`

error[E0277]: cannot subtract `u32` from `usize`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:27:57
   |
27 |             | ((1u64 << (width - n % W)) - 1) & a >> (W - n % W)
   |                                                         ^ no implementation for `usize - u32`
   |
   = help: the trait `Sub<u32>` is not implemented for `usize`
   = help: the following other types implement trait `Sub<Rhs>`:
             `&'a usize` implements `Sub<usize>`
             `&usize` implements `Sub<&usize>`
             `usize` implements `Sub<&usize>`
             `usize` implements `Sub`

error[E0308]: mismatched types
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:33:51
   |
33 |             let signs = ((1u64 << n) - 1) << (W - n);
   |                                                   ^ expected `usize`, found `u32`

error[E0277]: cannot subtract `u32` from `usize`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:33:49
   |
33 |             let signs = ((1u64 << n) - 1) << (W - n);
   |                                                 ^ no implementation for `usize - u32`
   |
   = help: the trait `Sub<u32>` is not implemented for `usize`
   = help: the following other types implement trait `Sub<Rhs>`:
             `&'a usize` implements `Sub<usize>`
             `&usize` implements `Sub<&usize>`
             `usize` implements `Sub<&usize>`
             `usize` implements `Sub`

error[E0308]: mismatched types
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:46:34
   |
46 |             | ((1i64 << (W - n % W)) - 1) & a as i64 >> (W - n % W)
   |                                  ^ expected `i32`, found `usize`

error[E0277]: cannot calculate the remainder of `i32` divided by `usize`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:46:32
   |
46 |             | ((1i64 << (W - n % W)) - 1) & a as i64 >> (W - n % W)
   |                                ^ no implementation for `i32 % usize`
   |
   = help: the trait `Rem<usize>` is not implemented for `i32`
   = help: the following other types implement trait `Rem<Rhs>`:
             `&'a i32` implements `Rem<i32>`
             `&i32` implements `Rem<&i32>`
             `i32` implements `Rem<&i32>`
             `i32` implements `Rem`

error[E0308]: mismatched types
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:46:30
   |
46 |             | ((1i64 << (W - n % W)) - 1) & a as i64 >> (W - n % W)
   |                              ^^^^^ expected `usize`, found `i32`

error[E0277]: cannot subtract `i32` from `usize`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:46:28
   |
46 |             | ((1i64 << (W - n % W)) - 1) & a as i64 >> (W - n % W)
   |                            ^ no implementation for `usize - i32`
   |
   = help: the trait `Sub<i32>` is not implemented for `usize`
   = help: the following other types implement trait `Sub<Rhs>`:
             `&'a usize` implements `Sub<usize>`
             `&usize` implements `Sub<&usize>`
             `usize` implements `Sub<&usize>`
             `usize` implements `Sub`

error[E0308]: mismatched types
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:46:66
   |
46 |             | ((1i64 << (W - n % W)) - 1) & a as i64 >> (W - n % W)
   |                                                                  ^ expected `i32`, found `usize`

error[E0277]: cannot calculate the remainder of `i32` divided by `usize`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:46:64
   |
46 |             | ((1i64 << (W - n % W)) - 1) & a as i64 >> (W - n % W)
   |                                                                ^ no implementation for `i32 % usize`
   |
   = help: the trait `Rem<usize>` is not implemented for `i32`
   = help: the following other types implement trait `Rem<Rhs>`:
             `&'a i32` implements `Rem<i32>`
             `&i32` implements `Rem<&i32>`
             `i32` implements `Rem<&i32>`
             `i32` implements `Rem`

error[E0308]: mismatched types
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:46:62
   |
46 |             | ((1i64 << (W - n % W)) - 1) & a as i64 >> (W - n % W)
   |                                                              ^^^^^ expected `usize`, found `i32`

error[E0277]: cannot subtract `i32` from `usize`
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:46:60
   |
46 |             | ((1i64 << (W - n % W)) - 1) & a as i64 >> (W - n % W)
   |                                                            ^ no implementation for `usize - i32`
   |
   = help: the trait `Sub<i32>` is not implemented for `usize`
   = help: the following other types implement trait `Sub<Rhs>`:
             `&'a usize` implements `Sub<usize>`
             `&usize` implements `Sub<&usize>`
             `usize` implements `Sub<&usize>`
             `usize` implements `Sub`

error[E0308]: mismatched types
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:74:16
   |
74 |         asr(8, aa, 1),
   |         ---    ^^ expected `u64`, found `i64`
   |         |
   |         arguments to this function are incorrect
   |
note: function defined here
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:41:4
   |
41 | fn asr<const W: usize>(width: W, a: u64, n: i32) -> i64 {
   |    ^^^                           ------
help: you can convert an `i64` to a `u64` and panic if the converted value doesn't fit
   |
74 |         asr(8, aa.try_into().unwrap(), 1),
   |                  ++++++++++++++++++++

error[E0308]: mismatched types
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:76:16
   |
76 |         asr(8, aa, 2)
   |         ---    ^^ expected `u64`, found `i64`
   |         |
   |         arguments to this function are incorrect
   |
note: function defined here
  --> /tmp/dolphincoder7b-bit_ops-py-rs.rs:41:4
   |
41 | fn asr<const W: usize>(width: W, a: u64, n: i32) -> i64 {
   |    ^^^                           ------
help: you can convert an `i64` to a `u64` and panic if the converted value doesn't fit
   |
76 |         asr(8, aa.try_into().unwrap(), 2)
   |                  ++++++++++++++++++++

error: aborting due to 55 previous errors

Some errors have detailed explanations: E0277, E0308, E0573.
For more information about an error, try `rustc --explain E0277`.
